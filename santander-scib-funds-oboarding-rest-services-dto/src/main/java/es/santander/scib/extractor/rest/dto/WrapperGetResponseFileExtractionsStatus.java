/**
 * Document Data Extractor
 * This API extracts metadata from unstructured documents using artificial intelligence (AI).  The process is asynchronous and requires that the document from which metadata is to be extracted is first uploaded separately to a repository, as the document itself is not provided in the API request.  The API can be used to: - Initiate a metadata extraction. - Verify the status of a file extraction. - Retrieve the metadata from a file extraction - Send feedback for extracted metadata.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: apiglobalgovernance@gruposantander.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.santander.scib.extractor.rest.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import es.santander.scib.extractor.rest.dto.LinkReference;
import es.santander.scib.extractor.rest.dto.StatusInfo;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

@JsonPropertyOrder({
  WrapperGetResponseFileExtractionsStatus.JSON_PROPERTY_STATUS_CODE,
  WrapperGetResponseFileExtractionsStatus.JSON_PROPERTY_HREF
})
/**
  * Response to a request to verify the status of a file extraction
  */

public class WrapperGetResponseFileExtractionsStatus  implements Serializable {
  
  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  
  private StatusInfo statusCode;

  public static final String JSON_PROPERTY_HREF = "href";
  
  private LinkReference href;

  /**
   * Get statusCode
   * @return statusCode
   **/
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatusInfo getStatusCode() {
    return statusCode;
  }

  /**
   * Set statusCode
   */
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusCode(StatusInfo statusCode) {
    this.statusCode = statusCode;
  }

  public WrapperGetResponseFileExtractionsStatus statusCode(StatusInfo statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get href
   * @return href
   **/
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LinkReference getHref() {
    return href;
  }

  /**
   * Set href
   */
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(LinkReference href) {
    this.href = href;
  }

  public WrapperGetResponseFileExtractionsStatus href(LinkReference href) {
    this.href = href;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WrapperGetResponseFileExtractionsStatus {\n");
    
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

