/**
 * Document Data Extractor
 * This API extracts metadata from unstructured documents using artificial intelligence (AI).  The process is asynchronous and requires that the document from which metadata is to be extracted is first uploaded separately to a repository, as the document itself is not provided in the API request.  The API can be used to: - Initiate a metadata extraction. - Verify the status of a file extraction. - Retrieve the metadata from a file extraction - Send feedback for extracted metadata.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: apiglobalgovernance@gruposantander.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.santander.scib.extractor.rest.client;

import es.santander.scib.extractor.rest.dto.Errors;
import es.santander.scib.extractor.rest.dto.WrapperCreateFeedbackProcessInput;
import es.santander.scib.extractor.rest.dto.WrapperGetResponseSendValidatedMetadata;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.Set;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.MediaType;

import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

/**
 * Document Data Extractor
 *
 * <p>This API extracts metadata from unstructured documents using artificial intelligence (AI).  The process is asynchronous and requires that the document from which metadata is to be extracted is first uploaded separately to a repository, as the document itself is not provided in the API request.  The API can be used to: - Initiate a metadata extraction. - Verify the status of a file extraction. - Retrieve the metadata from a file extraction - Send feedback for extracted metadata.
 *
 */

@RegisterRestClient(configKey="extractor-rest-service")
@RegisterProvider(ApiExceptionMapper.class)
@Path("/file_extractions/feedback")
public interface MetadataFeedbackApi  {

    /**
     * Sends feedback for extracted metadata.
     *
     * Sends feedback for previously extracted metadata in the form of validated metadata.  The file extraction ID for the previously extracted metadata and the validated metadata must be provided in the request body.  The response includes a notice about the feedback delivery result.
     *
     */
    @POST
    
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    WrapperGetResponseSendValidatedMetadata metadataFeedbackSending(@HeaderParam("x-santander-client-id")  @NotNull String xSantanderClientId, @Valid WrapperCreateFeedbackProcessInput wrapperCreateFeedbackProcessInput) throws ApiException, ProcessingException;
}
