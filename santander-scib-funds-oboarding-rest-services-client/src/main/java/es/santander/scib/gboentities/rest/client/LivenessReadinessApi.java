/**
 * GBO Entities
 * It allows the possibility of standardizing the way entities are created and generated for the different regions and global entities of GBO, allowing the creation of entities in a single way for the different users with a new way that allows this action to be carried out. 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: dario.vega@gruposantander.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.santander.scib.gboentities.rest.client;

import es.santander.scib.gboentities.rest.dto.Errors;
import es.santander.scib.gboentities.rest.dto.Health;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.Set;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.MediaType;

import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

/**
 * GBO Entities
 *
 * <p>It allows the possibility of standardizing the way entities are created and generated for the different regions and global entities of GBO, allowing the creation of entities in a single way for the different users with a new way that allows this action to be carried out. 
 *
 */

@RegisterRestClient(configKey="gbo-rest-service")
@RegisterProvider(ApiExceptionMapper.class)
@Path("/health")
public interface LivenessReadinessApi  {

    /**
     * Retrieve the liveness and the readiness of the service.
     *
     * Retrieve the liveness and the readiness of the service.
     *
     */
    @GET
    
    @Produces({ "application/json" })
    Health retrieveHealth(@HeaderParam("Authorization")  @NotNull String authorization, @HeaderParam("X-Santander-Client-Id")  @NotNull String xSantanderClientId, @HeaderParam("X-Santander-Device")  String xSantanderDevice, @HeaderParam("Accept-Language")  String acceptLanguage, @HeaderParam("If-None-Match")  String ifNoneMatch, @HeaderParam("If-Match")  String ifMatch, @HeaderParam("X-B3-TraceId")  String xB3TraceId, @HeaderParam("X-B3-ParentSpanId")  String xB3ParentSpanId, @HeaderParam("X-B3-SpanId")  String xB3SpanId, @HeaderParam("X-B3-Sampled")  String xB3Sampled) throws ApiException, ProcessingException;
}
