/**
 * GBO Entities
 * It allows the possibility of standardizing the way entities are created and generated for the different regions and global entities of GBO, allowing the creation of entities in a single way for the different users with a new way that allows this action to be carried out. 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: dario.vega@gruposantander.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.santander.scib.gboentities.rest.client;

import es.santander.scib.gboentities.rest.dto.Entity;
import es.santander.scib.gboentities.rest.dto.EntityResponse;
import es.santander.scib.gboentities.rest.dto.EntityUpdate;
import jakarta.ws.rs.*;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

/**
 * GBO Entities
 *
 * <p>
 * It allows the possibility of standardizing the way entities are created and
 * generated for the different regions and global entities of GBO, allowing the
 * creation of entities in a single way for the different users with a new way
 * that allows this action to be carried out.
 *
 */

@RegisterRestClient(configKey = "gbo-rest-service")
@RegisterProvider(ApiExceptionMapper.class)
@Path("/entities")
public interface EntitiesApi {

    /**
     * Creates an operational entity.
     *
     * Creates an operational entity.
     *
     */
    @POST

    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    EntityResponse createEntities(@HeaderParam("Authorization") @NotNull String authorization,
            @HeaderParam("X-Santander-Client-Id") @NotNull String xSantanderClientId, @Valid Entity entity,
            @HeaderParam("Accept") String accept, @HeaderParam("X-Santander-Device") String xSantanderDevice,
            @HeaderParam("Accept-Language") String acceptLanguage, @HeaderParam("If-None-Match") String ifNoneMatch,
            @HeaderParam("If-Match") String ifMatch, @HeaderParam("X-B3-TraceId") String xB3TraceId,
            @HeaderParam("X-B3-ParentSpanId") String xB3ParentSpanId, @HeaderParam("X-B3-SpanId") String xB3SpanId,
            @HeaderParam("X-B3-Sampled") String xB3Sampled) throws ApiException, ProcessingException;

    /**
     * Retrieves operational entities.
     *
     * Retrieves operational entities filtering by GLCS (Global Limit Code System).
     *
     */
    @GET
    @Produces({ "application/json" })
    Entity retrieveEntities(@HeaderParam("Authorization") @NotNull String authorization,
            @HeaderParam("X-Santander-Client-Id") @NotNull String xSantanderClientId,
            @QueryParam("glcs") @NotNull @Size(max = 6) String glcs, @HeaderParam("Accept") String accept,
            @HeaderParam("X-Santander-Device") String xSantanderDevice,
            @HeaderParam("Accept-Language") String acceptLanguage, @HeaderParam("If-None-Match") String ifNoneMatch,
            @HeaderParam("If-Match") String ifMatch, @HeaderParam("X-B3-TraceId") String xB3TraceId,
            @HeaderParam("X-B3-ParentSpanId") String xB3ParentSpanId, @HeaderParam("X-B3-SpanId") String xB3SpanId,
            @HeaderParam("X-B3-Sampled") String xB3Sampled) throws ApiException, ProcessingException;

    /**
     * Updates an operational entity.
     *
     * Updates an operational entity.
     *
     */
    @PATCH
    @Path("/{entity_id}")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    EntityUpdate updateEntities(@PathParam("entity_id") String entityId,
            @HeaderParam("Authorization") @NotNull String authorization,
            @HeaderParam("X-Santander-Client-Id") @NotNull String xSantanderClientId, @Valid EntityUpdate entityUpdate,
            @HeaderParam("Accept") String accept, @HeaderParam("X-Santander-Device") String xSantanderDevice,
            @HeaderParam("Accept-Language") String acceptLanguage, @HeaderParam("If-None-Match") String ifNoneMatch,
            @HeaderParam("If-Match") String ifMatch, @HeaderParam("X-B3-TraceId") String xB3TraceId,
            @HeaderParam("X-B3-ParentSpanId") String xB3ParentSpanId, @HeaderParam("X-B3-SpanId") String xB3SpanId,
            @HeaderParam("X-B3-Sampled") String xB3Sampled) throws ApiException, ProcessingException;
}
