/**
 * Document Data Extractor
 * This API extracts metadata from unstructured documents using artificial intelligence (AI).  The process is asynchronous and requires that the document from which metadata is to be extracted is first uploaded separately to a repository, as the document itself is not provided in the API request.  The API can be used to: - Initiate a metadata extraction. - Verify the status of a file extraction. - Retrieve the metadata from a file extraction - Send feedback for extracted metadata.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: apiglobalgovernance@gruposantander.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package es.santander.scib.extractor.rest.client;

import es.santander.scib.extractor.rest.dto.Errors;
import es.santander.scib.extractor.rest.dto.WrapperGetResponseFileExtractionsStatus;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.Set;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.MediaType;

import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

/**
 * Document Data Extractor
 *
 * <p>This API extracts metadata from unstructured documents using artificial intelligence (AI).  The process is asynchronous and requires that the document from which metadata is to be extracted is first uploaded separately to a repository, as the document itself is not provided in the API request.  The API can be used to: - Initiate a metadata extraction. - Verify the status of a file extraction. - Retrieve the metadata from a file extraction - Send feedback for extracted metadata.
 *
 */

@RegisterRestClient(configKey="extractor-rest-service")
@RegisterProvider(ApiExceptionMapper.class)
@Path("/file_extractions/{file_extraction_id}/status")
public interface ExtractionStatusApi  {

    /**
     * Verifies the status of a file extraction.
     *
     * Verifies the status of a specific file extraction initiated by the &#39;POST /file_extractions&#39; operation.  To send this request, you must provide a file extraction ID in the request path.  The response includes the extraction status and, when the extraction is complete, the Uniform Resource Identifier (URI) for the extracted metadata. When the extraction status is &#39;Completed&#39;, use the &#39;GET /file_extractions/{file_extraction_id}&#39; operation to retrieve the extracted metadata.
     *
     */
    @GET
    
    @Produces({ "application/json" })
    WrapperGetResponseFileExtractionsStatus metadataExtractionStatus(@HeaderParam("x-santander-client-id")  @NotNull String xSantanderClientId, @PathParam("file_extraction_id") String fileExtractionId) throws ApiException, ProcessingException;
}
